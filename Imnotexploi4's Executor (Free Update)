local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- Create a ScreenGui instance
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ExecutorGUI"
screenGui.ResetOnSpawn = false  -- Ensure the GUI persists across respawns
screenGui.Parent = PlayerGui

-- Create the main executor frame
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
mainFrame.Visible = true
mainFrame.Parent = screenGui

-- Create a title label
local titleLabel = Instance.new("TextLabel")
titleLabel.Name = "TitleLabel"
titleLabel.BackgroundTransparency = 1
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.TextScaled = true
titleLabel.Text = "Imnotexploi4's Executor V0.9"
titleLabel.Parent = mainFrame

-- Create a TextBox for code input
local codeInput = Instance.new("TextBox")
codeInput.Name = "CodeInput"
codeInput.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
codeInput.Text = ""
codeInput.ClearTextOnFocus = false
codeInput.MultiLine = true
codeInput.Parent = mainFrame

-- Create an execute button
local executeButton = Instance.new("TextButton")
executeButton.Name = "ExecuteButton"
executeButton.BackgroundColor3 = Color3.fromRGB(0, 200, 0)
executeButton.Text = "Execute"
executeButton.Parent = mainFrame

-- Create a save script button
local saveButton = Instance.new("TextButton")
saveButton.Name = "SaveButton"
saveButton.BackgroundColor3 = Color3.fromRGB(255, 165, 0)
saveButton.Text = "Save Script"
saveButton.Parent = mainFrame

-- Create a copy button
local copyButton = Instance.new("TextButton")
copyButton.Name = "CopyButton"
copyButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
copyButton.Text = "Copy"
copyButton.Parent = mainFrame

-- Create a paste button
local pasteButton = Instance.new("TextButton")
pasteButton.Name = "PasteButton"
pasteButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70) pasteButton.Text = "Paste"
pasteButton.Parent = mainFrame

-- Create the close button
local closeButton = Instance.new("TextButton")
closeButton.Name = "CloseButton"
closeButton.Size = UDim2.new(0, 50, 0, 50)
closeButton.Position = UDim2.new(1, -60, 0, 10)
closeButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
closeButton.Text = "X"
closeButton.Parent = mainFrame

-- Create the toggle button with an image
local toggleButton = Instance.new("ImageButton")
toggleButton.Name = "ToggleButton"
toggleButton.Image = "https://i.ibb.co/bBj0k4c/7-DC14-B6-F-840-B-46-BA-B88-E-6-C148-E48832-B.webp"
toggleButton.Visible = false
toggleButton.Parent = screenGui

-- Create the second page frame
local page2Frame = Instance.new("Frame")
page2Frame.Name = "Page2Frame"
page2Frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
page2Frame.Visible = false
page2Frame.Parent = screenGui

-- Create a button to switch to page 2
local page2Button = Instance.new("TextButton")
page2Button.Name = "Page2Button"
page2Button.BackgroundColor3 = Color3.fromRGB(0, 0, 200)
page2Button.Text = "Page 2"
page2Button.Parent = mainFrame

-- Create a button to switch back to the main page
local backButton = Instance.new("TextButton")
backButton.Name = "BackButton"
backButton.BackgroundColor3 = Color3.fromRGB(0, 0, 200)
backButton.Text = "Back"
backButton.Parent = page2Frame

-- Function to dynamically adjust the size and position of the GUI based on device type
local function adjustGUISize()
    local screenSize = workspace.CurrentCamera.ViewportSize
    if screenSize.Y <= 720 then
        -- Mobile device - smaller size
        mainFrame.Size = UDim2.new(0, 300, 0, 300)
        mainFrame.Position = UDim2.new(0.5, -150, 0.5, -150)

        titleLabel.Size = UDim2.new(0, 280, 0, 30)
        titleLabel.Position = UDim2.new(0, 10, 0, 5)

        codeInput.Size = UDim2.new(0, 280, 0, 150)
        codeInput.Position = UDim2.new(0, 10, 0, 45)

        executeButton.Size = UDim2.new(0, 80, 0, 40) executeButton.Position = UDim2.new(0.1, 0, 1, -50)

        saveButton.Size = UDim2.new(0, 80, 0, 40)
        saveButton.Position = UDim2.new(0.6, 0, 1, -50)

        copyButton.Size = UDim2.new(0, 80, 0, 40)
        copyButton.Position = UDim2.new(0.05, 0, 0.65, 0)

        pasteButton.Size = UDim2.new(0, 80, 0, 40)
        pasteButton.Position = UDim2.new(0.6, 0, 0.65, 0)

        toggleButton.Size = UDim2.new(0, 50, 0, 50)
        toggleButton.Position = UDim2.new(0, 10, 0, 10)

        page2Frame.Size = UDim2.new(0, 300, 0, 300)
        page2Frame.Position = UDim2.new(0.5, -150, 0.5, -150)

        page2Button.Size = UDim2.new(0, 80, 0, 40)
        page2Button.Position = UDim2.new(0.67, -50, 1, -50)

        backButton.Size = UDim2.new(0, 80, 0, 40)
        backButton.Position = UDim2.new(0.67, -50, 1, -50)
    else
        -- PC - normal size
        mainFrame.Size = UDim2.new(0, 400, 0, 400)
        mainFrame.Position = UDim2.new(0.5, -200, 0.5, -200)

        titleLabel.Size = UDim2.new(0, 380, 0, 40)
        titleLabel.Position = UDim2.new(0, 10, 0, 5)

        codeInput.Size = UDim2.new(0, 380, 0, 200)
        codeInput.Position = UDim2.new(0, 10, 0, 50)

        executeButton.Size = UDim2.new(0, 100, 0, 50)
        executeButton.Position = UDim2.new(0.25, -50, 1, -60)

        saveButton.Size = UDim2.new(0, 100, 0, 50)
        saveButton.Position = UDim2.new(0.75, -50, 1, -60)

        copyButton.Size = UDim2.new(0, 100, 0, 50)
        copyButton.Position = UDim2.new(0, 10, 1, -110)

        pasteButton.Size = UDim2.new(0, 100, 0, 50)
        pasteButton.Position = UDim2.new(1, -110, 1, -110)

        toggleButton.Size = UDim2.new(0, 100, 0, 100)
        toggleButton.Position = UDim2.new(0, 10, 0, 10)

        page2Frame.Size = UDim2.new(0, 400, 0, 400)
        page2Frame.Position = UDim2.new(0.5, -200, 0.5, -200)

        page2Button.Size = UDim2.new(0, 100, 0, 50)
        page2Button.Position = UDim2.new(0.75, -50, 1, -60) backButton.Size = UDim2.new(0, 100, 0, 50)
        backButton.Position = UDim2.new(0.75, -50, 1, -60)
    end
end

-- Initial GUI adjustment
adjustGUISize()

-- Connect to screen size change event
workspace.CurrentCamera:GetPropertyChangedSignal("ViewportSize"):Connect(adjustGUISize)

-- Make the GUI draggable
local function makeFrameDraggable(frame)
    local UserInputService = game:GetService("UserInputService")
    local dragging, dragInput, dragStart, startPos

    local function update(input)
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end

    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)
end

if mainFrame and page2Frame and toggleButton then
    makeFrameDraggable(mainFrame)
    makeFrameDraggable(page2Frame)
    makeFrameDraggable(toggleButton)
else
    warn("Failed to create or find mainFrame, page2Frame, or toggleButton.")
end

-- Function to toggle the main GUI visibility
local function toggleGUI()
    mainFrame.Visible = not mainFrame.Visible toggleButton.Visible = not mainFrame.Visible
end

-- Connect the close button click event
if closeButton then
    closeButton.MouseButton1Click:Connect(function()
        mainFrame.Visible = false
        toggleButton.Visible = true
    end)
else
    warn("Failed to create CloseButton.")
end

-- Connect the toggle button click event
if toggleButton then
    toggleButton.MouseButton1Click:Connect(toggleGUI)
else
    warn("Failed to create or find ToggleButton.")
end

-- Function to execute the code
local function executeCode()
    local code = codeInput.Text

    -- Safely execute the code inside a new environment
    local function safeExecute(source)
        local func, err = loadstring(source)
        if func then
            setfenv(func, getfenv())  -- Set the environment of the function to the current environment
            local success, execErr = pcall(func)
            if not success then
                warn("Error executing code: " .. execErr)
            end
        else
            warn("Error parsing code: " .. err)
        end
    end

    safeExecute(code)
end

-- Function to copy the code
local function copyCode()
    setclipboard(codeInput.Text)
    print("Code copied to clipboard")
end

-- Function to paste the code
local function pasteCode()
    -- Use a placeholder text for clipboard content. Replace this with actual clipboard retrieval logic.
    local clipboardText = "example code from clipboard" -- Replace with actual clipboard retrieval logic.
    codeInput.Text = clipboardText
    print("Code pasted from clipboard")
end

-- Function to save the code
local function saveCode()
    -- Save the code logic here
    print("Code saved: " .. codeInput.Text)
end

-- Function to switch to page 2
local function goToPage2()
    mainFrame.Visible = false
    page2Frame.Visible = true
end

-- Function to switch back to main page
local function goToMainPage()
    page2Frame.Visible = false
    mainFrame.Visible = true
end
-- Connect the button click events
if executeButton then
    executeButton.MouseButton1Click:Connect(executeCode)
else
    warn("Failed to create ExecuteButton.")
end

if copyButton then
    copyButton.MouseButton1Click:Connect(copyCode)
else
    warn("Failed to create CopyButton.")
end

if pasteButton then
    pasteButton.MouseButton1Click:Connect(pasteCode)
else
    warn("Failed to create PasteButton.")
end

if saveButton then
    saveButton.MouseButton1Click:Connect(saveCode)
else
    warn("Failed to create SaveButton.")
end

if page2Button then
    page2Button.MouseButton1Click:Connect(goToPage2)
else
    warn("Failed to create Page2Button.")
end

if backButton then
    backButton.MouseButton1Click:Connect(goToMainPage)
else
    warn("Failed to create BackButton.")
end

-- Function to ensure GUI reopens on respawn
local function reopenGUI()
    if mainFrame and toggleButton then
        mainFrame.Visible = true
        toggleButton.Visible = false
    else
        warn("MainFrame or ToggleButton is not available on respawn.")
    end
end

-- Connect to character respawn to reopen the GUI
LocalPlayer.CharacterAdded:Connect(reopenGUI)

-- Print welcome message
print("Hello " .. LocalPlayer.Name .. ", Welcome to Imnotexploi4's Executor V0.9")
